{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureClientId": {
      "type": "string",
      "metadata": {
        "description": "Azure Client Id."
      }
    },
    "azureTenantId": {
      "type": "string",
      "metadata": {
        "description": "Azure Tenant Id."
      }
    },
    "azureClientSecret": {
      "type": "string",
      "metadata": {
        "description": "Azure Client Secret."
      }
    },
    "azureSubscriptionId": {
      "type": "string",
      "metadata": {
        "description": "Azure Subscription Id."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "sshKey": {
      "type": "string",
      "metadata": {
        "description": "The ssh public key which is copied to VM."
      }
    },
    "xapLicense": {
      "type": "string",
      "metadata": {
        "description": "The Xap license value."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "xap-virtual-network",
      "metadata": {
        "description": "The name of virtual network which will be created during installation."
      }
    },
    "managerVmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "The Manager's VM size."
      }
    },
    "managerVmName": {
      "type": "string",
      "defaultValue": "xap-manager",
      "metadata": {
        "description": "The Manager's VM name."
      }
    },
    "nicName": {
      "type": "string",
      "defaultValue": "xap-nic",
      "metadata": {
        "description": "The Nic name."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "xap-subnet",
      "metadata": {
        "description": "The Subnet name."
      }
    },
    "managerPublicIPAddressName": {
      "type": "string",
      "defaultValue": "xap-public-ip",
      "metadata": {
        "description": "The Subnet name."
      }
    },
    "managerStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The Manager's storage account type."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "xapstorage",
      "metadata": {
        "description": "The Storage account name"
      }
    }
  },
  "variables": {
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSKU": "16.04-LTS",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "imageVhdUrl": "https://xapvhd2.blob.core.windows.net/vhds/vm10disk.vhd",
    "scriptsBase": "https://raw.githubusercontent.com/vitaliy-zinchenko/azure-template/master/",
    "xapManagerRunScript": "install-manager.sh",
    "xapBlobUrl": "https://xapblob.blob.core.windows.net/xap/gigaspaces-xap-12.2.0-ga-b18000.zip",
    "xapRestApiBlobUrl": "https://xapblob.blob.core.windows.net/xap/rest-api.jar"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('managerStorageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('managerPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('managerPublicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('managerPublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('managerVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('managerVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('managerVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('managerVmName'), '/', 'runManager')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', parameters('managerVmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('scriptsBase'), variables('xapManagerRunScript'))]"
          ],
          "commandToExecute": "[concat('sh ', variables('xapManagerRunScript'), ' --xap-license ', parameters('xapLicense'), ' --ssh-key', parameters('sshKey'), ' --azure-client-id', parameters('azureClientId'), ' --azure-tenant-id', parameters('azureTenantId'), ' --azure-client-secret', parameters('azureClientSecret'), ' --azure-subscription-id', parameters('azureSubscriptionId'), ' --xap-blob-url', variables('xapBlobUrl'), ' --xap-rest-api-blob-url', variables('xapRestApiBlobUrl'))]"
        }
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(parameters('managerPublicIPAddressName')).dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(parameters('managerPublicIPAddressName')).dnsSettings.fqdn)]"
    }
  }
}