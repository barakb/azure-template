{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureClientId": {
      "type": "string",
      "metadata": {
        "description": "Azure Client Id."
      }
    },
    "azureTenantId": {
      "type": "string",
      "metadata": {
        "description": "Azure Tenant Id."
      }
    },
    "azureClientSecret": {
      "type": "string",
      "metadata": {
        "description": "Azure Client Secret."
      }
    },
    "azureSubscriptionId": {
      "type": "string",
      "metadata": {
        "description": "Azure Subscription Id."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "publicSshKey": {
      "type": "string",
      "metadata": {
        "description": "The ssh public key which is copied to VM."
      }
    },
    "xapLicense": {
      "type": "string",
      "metadata": {
        "description": "The Xap license value."
      }
    },
    "managerVmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "The Manager's VM size."
      }
    },
    "managerVmName": {
      "type": "string",
      "defaultValue": "xap-manager",
      "metadata": {
        "description": "The Manager's VM name."
      }
    },
    "nicName": {
      "type": "string",
      "defaultValue": "xap-nic",
      "metadata": {
        "description": "The Nic name."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "xap-virtual-network",
      "metadata": {
        "description": "The name of virtual network which will be created during installation."
      }
    },
    "managerSubnetName": {
      "type": "string",
      "defaultValue": "xap-manager-subnet",
      "metadata": {
        "description": "The Manager Subnet name."
      }
    },
    "workerSubnetName": {
      "type": "string",
      "defaultValue": "xap-worker-subnet",
      "metadata": {
        "description": "The Worker Subnet name."
      }
    },
    "managerSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The Manager subnet prefix."
      }
    },
    "workerSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "The Worker subnet prefix."
      }
    },
    "managerPublicIPAddressName": {
      "type": "string",
      "defaultValue": "xap-public-ip",
      "metadata": {
        "description": "The Subnet name."
      }
    },
    "managerStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The Manager's storage account type."
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The network address prefix."
      }
    },
    "workerNamePrefix": {
      "type": "string",
      "defaultValue": "xap-worker",
      "metadata": {
        "description": "The worker VM prefix."
      }
    }
  },
  "variables": {
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSKU": "16.04-LTS",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('managerSubnetName'))]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "imageVhdUrl": "https://xapvhd2.blob.core.windows.net/vhds/vm10disk.vhd",
    "scriptsBase": "https://raw.githubusercontent.com/vitaliy-zinchenko/azure-template/master/",
    "xapManagerRunScript": "install-manager.sh",
    "xapWorkerRunScript": "install-worker.sh",
    "xapBlobUrl": "https://xapblob.blob.core.windows.net/xap/gigaspaces-xap-12.2.0-ga-b18000.zip",
    "xapRestApiBlobUrl": "https://xapblob.blob.core.windows.net/xap/rest-api.jar"
  },
  "resources": [
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('managerPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('managerSubnetName'), '-security-group')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh-rule",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "rest-api-rule",
            "properties": {
              "description": "Allow Rest Api",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8090",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "web-iu-rule",
            "properties": {
              "description": "Allow XAP WEB UI",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8099",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('workerSubnetName'), '-security-group')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-manager",
            "properties": {
              "description": "Allow Manager subnet access",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('managerSubnetPrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('managerSubnetName'), '-security-group'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('workerSubnetName'), '-security-group'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('managerSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('managerSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('managerSubnetName'), '-security-group'))]"
              }
            }
          },
          {
            "name": "[parameters('workerSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('workerSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('workerSubnetName'), '-security-group'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('managerPublicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('managerPublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('managerVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('managerVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('managerVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('publicSshKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('managerVmName'), '/', 'runManager')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', parameters('managerVmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('scriptsBase'), variables('xapManagerRunScript'))]"
          ],
          "commandToExecute": "[concat('sh ', variables('xapManagerRunScript'), ' --xap-license \"', parameters('xapLicense'), '\" --ssh-key \"', parameters('publicSshKey'), '\" --azure-client-id \"', parameters('azureClientId'), '\" --azure-tenant-id \"', parameters('azureTenantId'), '\" --azure-client-secret \"', parameters('azureClientSecret'), '\" --azure-subscription-id \"', parameters('azureSubscriptionId'), '\" --xap-blob-url \"', variables('xapBlobUrl'), '\" --xap-rest-api-blob-url \"', variables('xapRestApiBlobUrl'), '\" --install-script-base \"', variables('scriptsBase'), '\" --install-worker-script-name \"', variables('xapWorkerRunScript'), '\" --azure-resource-group \"', resourceGroup().name, '\" --azure-network \"', parameters('virtualNetworkName'), '\" --azure-worker-subnet \"', parameters('workerSubnetName'), '\" --azure-region \"', resourceGroup().location, '\" --manager-vm-username \"', parameters('adminUsername'), '\" --worker-name-prefix \"', parameters('workerNamePrefix'), '\"')]"
        }
      }
    }
  ],
  "outputs": {
  }
}